"use strict";(self.webpackChunkflashbot_docs=self.webpackChunkflashbot_docs||[]).push([[5551],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return b}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=o.createContext({}),c=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),b=a,h=p["".concat(i,".").concat(b)]||p[b]||m[b]||r;return n?o.createElement(h,s(s({ref:t},u),{},{components:n})):o.createElement(h,s({ref:t},u))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<r;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9123:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),s=["components"],l={},i="Installation",c={unversionedId:"flashbots-mev-boost/getting-started/installation",id:"flashbots-mev-boost/getting-started/installation",isDocsHomePage:!1,title:"Installation",description:"The most common setup is to install MEV-Boost on the same machine as the beacon client. Multiple beacon-clients can use a single MEV-Boost instance. The default port is 18550.",source:"@site/docs/flashbots-mev-boost/getting-started/installation.md",sourceDirName:"flashbots-mev-boost/getting-started",slug:"/flashbots-mev-boost/getting-started/installation",permalink:"/flashbots-mev-boost/getting-started/installation",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"system-requirements",permalink:"/flashbots-mev-boost/getting-started/system-requirements"},next:{title:"Usage",permalink:"/flashbots-mev-boost/getting-started/usage"}},u=[{value:"Binaries",id:"binaries",children:[]},{value:"From source",id:"from-source",children:[{value:"<code>go install</code>",id:"go-install",children:[]},{value:"Clone and Build",id:"clone-and-build",children:[]}]},{value:"From Docker image",id:"from-docker-image",children:[]},{value:"Systemd configuration",id:"systemd-configuration",children:[]},{value:"Troubleshoot Installation",id:"troubleshoot-installation",children:[]}],m={toc:u};function p(e){var t=e.components,n=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installation"},"Installation"),(0,r.kt)("p",null,"The most common setup is to install MEV-Boost on the same machine as the beacon client. Multiple beacon-clients can use a single MEV-Boost instance. The default port is 18550."),(0,r.kt)("p",null,"See also ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/remyroy/ethstaker/blob/main/prepare-for-the-merge.md#installing-mev-boost"},"R\xe9my Roy's")," guide for comprehensive instructions on installing, configuring and running MEV-Boost."),(0,r.kt)("h2",{id:"binaries"},"Binaries"),(0,r.kt)("p",null,"Each release includes binaries from Linux, Windows and macOS (portable build, for amd and arm). You can find the latest release at\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flashbots/mev-boost/releases"},"https://github.com/flashbots/mev-boost/releases")),(0,r.kt)("h2",{id:"from-source"},"From source"),(0,r.kt)("p",null,"Requires ",(0,r.kt)("a",{parentName:"p",href:"https://go.dev/doc/install"},"Go 1.18+"),"."),(0,r.kt)("h3",{id:"go-install"},(0,r.kt)("inlineCode",{parentName:"h3"},"go install")),(0,r.kt)("p",null,"Install MEV-Boost with ",(0,r.kt)("inlineCode",{parentName:"p"},"go install"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"go install github.com/flashbots/mev-boost@latest\nmev-boost -help\n")),(0,r.kt)("h3",{id:"clone-and-build"},"Clone and Build"),(0,r.kt)("p",null,"Ensure you are downloading the most updated MEV-Boost release. Releases are available at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flashbots/mev-boost/releases"},"https://github.com/flashbots/mev-boost/releases")),(0,r.kt)("p",null,"clone the repository and build it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/flashbots/mev-boost.git\ncd mev-boost\n\n# If you want to build a specific release, check out the tag first. https://github.com/flashbots/mev-boost/releases\ngit checkout tags/YOUR_VERSION\n\n# Build most recent version of MEV-Boost\nmake build\n\n# Use build-portable if the standard build crashes on startup\nmake build-portable\n\n# Show help. This confirms MEV-Boost is able to start\n./mev-boost -help\n")),(0,r.kt)("h2",{id:"from-docker-image"},"From Docker image"),(0,r.kt)("p",null,"We maintain a MEV-Boost Docker images at ",(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/flashbots/mev-boost"},"https://hub.docker.com/r/flashbots/mev-boost")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/install/"},"Install Docker Engine")),(0,r.kt)("li",{parentName:"ul"},"Pull & run the latest image:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Get the default MEV-Boost image\ndocker pull flashbots/mev-boost:latest\n\n# Get the portable MEV-Boost image\ndocker pull flashbots/mev-boost:latest-portable\n\n# Run it\ndocker run flashbots/mev-boost -help\n")),(0,r.kt)("h2",{id:"systemd-configuration"},"Systemd configuration"),(0,r.kt)("p",null,"You can run MEV-Boost with a systemd config like this:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"/etc/systemd/system/mev-boost.service")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"[Unit]\nDescription=mev-boost\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nUser=mev-boost\nGroup=mev-boost\nWorkingDirectory=/home/mev-boost\nType=simple\nRestart=always\nRestartSec=5\nExecStart=/home/mev-boost/bin/mev-boost \\\n        -mainnet \\\n        -relay-check \\\n        -relays YOUR_RELAY_CHOICE\n\n[Install]\nWantedBy=multi-user.target\n")),(0,r.kt)("h2",{id:"troubleshoot-installation"},"Troubleshoot Installation"),(0,r.kt)("p",null,"If MEV-Boost crashes with ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flashbots/mev-boost/issues/256"},(0,r.kt)("inlineCode",{parentName:"a"},'"SIGILL: illegal instruction"'))," then you need to use a portable build:"),(0,r.kt)("p",null,"You can either use a ",(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/flashbots/mev-boost/tags"},"portable Docker image"),", or install/build the portable build like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# using `go install`\nCGO_CFLAGS="-O -D__BLST_PORTABLE__" go install github.com/flashbots/mev-boost@latest\n\n# build from source\nmake build-portable\n')))}p.isMDXComponent=!0}}]);